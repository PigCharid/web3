{
	"id": "b6bf60d8b2fb5143dc4109162eb7060a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"GnosisSafeProxy.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2021-05-12\r\n*/\r\n\r\n// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\r\n/// @author Richard Meissner - <richard@gnosis.io>\r\ninterface IProxy {\r\n    function masterCopy() external view returns (address);\r\n}\r\n\r\n/// @title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\r\n/// @author Stefan George - <stefan@gnosis.io>\r\n/// @author Richard Meissner - <richard@gnosis.io>\r\ncontract GnosisSafeProxy {\r\n    // singleton always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\r\n    address internal singleton;\r\n\r\n    /// @dev Constructor function sets address of singleton contract.\r\n    /// @param _singleton Singleton address.\r\n    constructor(address _singleton) {\r\n        require(_singleton != address(0), \"Invalid singleton address provided\");\r\n        singleton = _singleton;\r\n    }\r\n\r\n    /// @dev Fallback function forwards all transactions and returns all received return data.\r\n    fallback() external payable {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            let _singleton := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\r\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\r\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\r\n                mstore(0, _singleton)\r\n                return(0, 0x20)\r\n            }\r\n            calldatacopy(0, 0, calldatasize())\r\n            let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            if eq(success, 0) {\r\n                revert(0, returndatasize())\r\n            }\r\n            return(0, returndatasize())\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GnosisSafeProxy.sol": {
				"GnosisSafeProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor function sets address of singleton contract.",
								"params": {
									"_singleton": "Singleton address."
								}
							}
						},
						"title": "GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GnosisSafeProxy.sol\":595:2123  contract GnosisSafeProxy {... */\n  mstore(0x40, 0x80)\n    /* \"GnosisSafeProxy.sol\":1036:1191  constructor(address _singleton) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GnosisSafeProxy.sol\":1109:1110  0 */\n  0x00\n    /* \"GnosisSafeProxy.sol\":1087:1111  _singleton != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"GnosisSafeProxy.sol\":1087:1097  _singleton */\n  dup2\n    /* \"GnosisSafeProxy.sol\":1087:1111  _singleton != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"GnosisSafeProxy.sol\":1079:1150  require(_singleton != address(0), \"Invalid singleton address provided\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"GnosisSafeProxy.sol\":1173:1183  _singleton */\n  dup1\n    /* \"GnosisSafeProxy.sol\":1161:1170  singleton */\n  0x00\n  dup1\n    /* \"GnosisSafeProxy.sol\":1161:1183  singleton = _singleton */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"GnosisSafeProxy.sol\":1036:1191  constructor(address _singleton) {... */\n  pop\n    /* \"GnosisSafeProxy.sol\":595:2123  contract GnosisSafeProxy {... */\n  jump(tag_9)\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_13:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_14:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_26\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_15:\n    /* \"#utility.yul\":641:665   */\n  tag_28\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_29:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_16:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_31\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_34\n  tag_11\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":932:1051   */\ntag_33:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_35\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_17:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1598   */\ntag_18:\n    /* \"#utility.yul\":1517:1551   */\n  0x496e76616c69642073696e676c65746f6e20616464726573732070726f766964\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1552   */\n  mstore\n    /* \"#utility.yul\":1586:1590   */\n  0x6564000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1581:1583   */\n  0x20\n    /* \"#utility.yul\":1573:1579   */\n  dup3\n    /* \"#utility.yul\":1569:1584   */\n  add\n    /* \"#utility.yul\":1562:1591   */\n  mstore\n    /* \"#utility.yul\":1377:1598   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1604:1970   */\ntag_19:\n    /* \"#utility.yul\":1746:1749   */\n  0x00\n    /* \"#utility.yul\":1767:1834   */\n  tag_39\n    /* \"#utility.yul\":1831:1833   */\n  0x22\n    /* \"#utility.yul\":1826:1829   */\n  dup4\n    /* \"#utility.yul\":1767:1834   */\n  tag_17\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1760:1834   */\n  swap2\n  pop\n    /* \"#utility.yul\":1843:1936   */\n  tag_40\n    /* \"#utility.yul\":1932:1935   */\n  dup3\n    /* \"#utility.yul\":1843:1936   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1961:1963   */\n  0x40\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1952:1964   */\n  add\n    /* \"#utility.yul\":1945:1964   */\n  swap1\n  pop\n    /* \"#utility.yul\":1604:1970   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1976:2395   */\ntag_8:\n    /* \"#utility.yul\":2142:2146   */\n  0x00\n    /* \"#utility.yul\":2180:2182   */\n  0x20\n    /* \"#utility.yul\":2169:2178   */\n  dup3\n    /* \"#utility.yul\":2165:2183   */\n  add\n    /* \"#utility.yul\":2157:2183   */\n  swap1\n  pop\n    /* \"#utility.yul\":2229:2238   */\n  dup2\n    /* \"#utility.yul\":2223:2227   */\n  dup2\n    /* \"#utility.yul\":2219:2239   */\n  sub\n    /* \"#utility.yul\":2215:2216   */\n  0x00\n    /* \"#utility.yul\":2204:2213   */\n  dup4\n    /* \"#utility.yul\":2200:2217   */\n  add\n    /* \"#utility.yul\":2193:2240   */\n  mstore\n    /* \"#utility.yul\":2257:2388   */\n  tag_42\n    /* \"#utility.yul\":2383:2387   */\n  dup2\n    /* \"#utility.yul\":2257:2388   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2249:2388   */\n  swap1\n  pop\n    /* \"#utility.yul\":1976:2395   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"GnosisSafeProxy.sol\":595:2123  contract GnosisSafeProxy {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GnosisSafeProxy.sol\":595:2123  contract GnosisSafeProxy {... */\n      mstore(0x40, 0x80)\n        /* \"GnosisSafeProxy.sol\":1447:1489  0xffffffffffffffffffffffffffffffffffffffff */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"GnosisSafeProxy.sol\":1443:1444  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1437:1445  sload(0) */\n      sload\n        /* \"GnosisSafeProxy.sol\":1433:1490  and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff) */\n      and\n        /* \"GnosisSafeProxy.sol\":1627:1693  0xa619486e00000000000000000000000000000000000000000000000000000000 */\n      0xa619486e00000000000000000000000000000000000000000000000000000000\n        /* \"GnosisSafeProxy.sol\":1623:1624  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1610:1625  calldataload(0) */\n      calldataload\n        /* \"GnosisSafeProxy.sol\":1607:1694  eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) */\n      sub\n        /* \"GnosisSafeProxy.sol\":1604:1783  if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {... */\n      tag_5\n      jumpi\n        /* \"GnosisSafeProxy.sol\":1724:1734  _singleton */\n      dup1\n        /* \"GnosisSafeProxy.sol\":1721:1722  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1714:1735  mstore(0, _singleton) */\n      mstore\n        /* \"GnosisSafeProxy.sol\":1763:1767  0x20 */\n      0x20\n        /* \"GnosisSafeProxy.sol\":1760:1761  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1753:1768  return(0, 0x20) */\n      return\n        /* \"GnosisSafeProxy.sol\":1604:1783  if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {... */\n    tag_5:\n        /* \"GnosisSafeProxy.sol\":1816:1830  calldatasize() */\n      calldatasize\n        /* \"GnosisSafeProxy.sol\":1813:1814  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1810:1811  0 */\n      dup1\n        /* \"GnosisSafeProxy.sol\":1797:1831  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"GnosisSafeProxy.sol\":1914:1915  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1911:1912  0 */\n      dup1\n        /* \"GnosisSafeProxy.sol\":1895:1909  calldatasize() */\n      calldatasize\n        /* \"GnosisSafeProxy.sol\":1892:1893  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1880:1890  _singleton */\n      dup5\n        /* \"GnosisSafeProxy.sol\":1873:1878  gas() */\n      gas\n        /* \"GnosisSafeProxy.sol\":1860:1916  delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"GnosisSafeProxy.sol\":1951:1967  returndatasize() */\n      returndatasize\n        /* \"GnosisSafeProxy.sol\":1948:1949  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1945:1946  0 */\n      dup1\n        /* \"GnosisSafeProxy.sol\":1930:1968  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"GnosisSafeProxy.sol\":1997:1998  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":1988:1995  success */\n      dup2\n        /* \"GnosisSafeProxy.sol\":1985:1999  eq(success, 0) */\n      sub\n        /* \"GnosisSafeProxy.sol\":1982:2061  if eq(success, 0) {... */\n      tag_6\n      jumpi\n        /* \"GnosisSafeProxy.sol\":2029:2045  returndatasize() */\n      returndatasize\n        /* \"GnosisSafeProxy.sol\":2026:2027  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":2019:2046  revert(0, returndatasize()) */\n      revert\n        /* \"GnosisSafeProxy.sol\":1982:2061  if eq(success, 0) {... */\n    tag_6:\n        /* \"GnosisSafeProxy.sol\":2085:2101  returndatasize() */\n      returndatasize\n        /* \"GnosisSafeProxy.sol\":2082:2083  0 */\n      0x00\n        /* \"GnosisSafeProxy.sol\":2075:2102  return(0, returndatasize()) */\n      return\n\n    auxdata: 0xa2646970667358221220c0271ee727bfcf451f346e49001b382d3104a259b53f3f328670d0a28915351b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2398:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1270:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1286:11:1",
														"type": ""
													}
												],
												"src": "1202:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:1"
																	},
																	{
																		"hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f766964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1517:34:1",
																		"type": "",
																		"value": "Invalid singleton address provid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1573:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1569:15:1"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1586:4:1",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1562:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1475:6:1",
														"type": ""
													}
												],
												"src": "1377:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1750:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1760:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1826:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1767:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1932:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
																	"nodeType": "YulIdentifier",
																	"src": "1843:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1945:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1738:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:1",
														"type": ""
													}
												],
												"src": "1604:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2147:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2157:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2215:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2223:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2229:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2193:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2383:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2257:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2249:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2142:4:1",
														"type": ""
													}
												],
												"src": "1976:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid singleton address provid\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102d13803806102d18339818101604052810190610032919061014a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610098906101fa565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061021a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610117826100ec565b9050919050565b6101278161010c565b811461013257600080fd5b50565b6000815190506101448161011e565b92915050565b6000602082840312156101605761015f6100e7565b5b600061016e84828501610135565b91505092915050565b600082825260208201905092915050565b7f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006101e4602283610177565b91506101ef82610188565b604082019050919050565b60006020820190508181036000830152610213816101d7565b9050919050565b60a9806102286000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003503604f578060005260206000f35b3660008037600080366000845af43d6000803e60008103606e573d6000fd5b3d6000f3fea2646970667358221220c0271ee727bfcf451f346e49001b382d3104a259b53f3f328670d0a28915351b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D1 CODESIZE SUB DUP1 PUSH2 0x2D1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x21A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH2 0xEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127 DUP2 PUSH2 0x10C JUMP JUMPDEST DUP2 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x144 DUP2 PUSH2 0x11E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160 JUMPI PUSH2 0x15F PUSH2 0xE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E DUP5 DUP3 DUP6 ADD PUSH2 0x135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642073696E676C65746F6E20616464726573732070726F766964 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4 PUSH1 0x22 DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF DUP3 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213 DUP2 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP1 PUSH2 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH32 0xA619486E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD SUB PUSH1 0x4F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 DUP2 SUB PUSH1 0x6E JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x27 0x1E 0xE7 0x27 0xBF 0xCF GASLIMIT 0x1F CALLVALUE PUSH15 0x49001B382D3104A259B53F3F328670 0xD0 LOG2 DUP10 ISZERO CALLDATALOAD SHL PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "595:1528:0:-:0;;;1036:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1109:1;1087:24;;:10;:24;;;1079:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1173:10;1161:9;;:22;;;;;;;;;;;;;;;;;;1036:155;595:1528;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:221::-;1517:34;1513:1;1505:6;1501:14;1494:58;1586:4;1581:2;1573:6;1569:15;1562:29;1377:221;:::o;1604:366::-;1746:3;1767:67;1831:2;1826:3;1767:67;:::i;:::-;1760:74;;1843:93;1932:3;1843:93;:::i;:::-;1961:2;1956:3;1952:12;1945:19;;1604:366;;;:::o;1976:419::-;2142:4;2180:2;2169:9;2165:18;2157:26;;2229:9;2223:4;2219:20;2215:1;2204:9;2200:17;2193:47;2257:131;2383:4;2257:131;:::i;:::-;2249:139;;1976:419;;;:::o;595:1528:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003503604f578060005260206000f35b3660008037600080366000845af43d6000803e60008103606e573d6000fd5b3d6000f3fea2646970667358221220c0271ee727bfcf451f346e49001b382d3104a259b53f3f328670d0a28915351b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH32 0xA619486E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD SUB PUSH1 0x4F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 DUP2 SUB PUSH1 0x6E JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x27 0x1E 0xE7 0x27 0xBF 0xCF GASLIMIT 0x1F CALLVALUE PUSH15 0x49001B382D3104A259B53F3F328670 0xD0 LOG2 DUP10 ISZERO CALLDATALOAD SHL PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "595:1528:0:-:0;;;1447:42;1443:1;1437:8;1433:57;1627:66;1623:1;1610:15;1607:87;1604:179;;1724:10;1721:1;1714:21;1763:4;1760:1;1753:15;1604:179;1816:14;1813:1;1810;1797:34;1914:1;1911;1895:14;1892:1;1880:10;1873:5;1860:56;1951:16;1948:1;1945;1930:38;1997:1;1988:7;1985:14;1982:79;;2029:16;2026:1;2019:27;1982:79;2085:16;2082:1;2075:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1087,
									"end": 1111,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1087,
									"end": 1111,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1111,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1079,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1173,
									"end": 1183,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1161,
									"end": 1170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1036,
									"end": 1191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1377,
									"end": 1598,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1377,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "496E76616C69642073696E676C65746F6E20616464726573732070726F766964"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1552,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "PUSH",
									"source": 1,
									"value": "6564000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1581,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1579,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1584,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1591,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1598,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1749,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1831,
									"end": 1833,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1826,
									"end": 1829,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1767,
									"end": 1834,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1834,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1767,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1834,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1932,
									"end": 1935,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1843,
									"end": 1936,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1843,
									"end": 1936,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1843,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1952,
									"end": 1964,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 1964,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 1964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1970,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2142,
									"end": 2146,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2180,
									"end": 2182,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2165,
									"end": 2183,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2157,
									"end": 2183,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2157,
									"end": 2183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2229,
									"end": 2238,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2223,
									"end": 2227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2239,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2215,
									"end": 2216,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2204,
									"end": 2213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2240,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2257,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2257,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2257,
									"end": 2388,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2257,
									"end": 2388,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2257,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2388,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2395,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 2123,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0271ee727bfcf451f346e49001b382d3104a259b53f3f328670d0a28915351b64736f6c634300080d0033",
									".code": [
										{
											"begin": 595,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 595,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 2123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1693,
											"name": "PUSH",
											"source": 0,
											"value": "A619486E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1604,
											"end": 1783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1768,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1783,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1604,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1831,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1916,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 1999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "RETURN",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of singleton contract.\",\"params\":{\"_singleton\":\"Singleton address.\"}}},\"title\":\"GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GnosisSafeProxy.sol\":\"GnosisSafeProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GnosisSafeProxy.sol\":{\"keccak256\":\"0x0166e91c659fd2c562cd868dad70f790b4c9c2670b79d703642d4fece6a3eccd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6401ffa288a9184342746143f18c600e4fc1f9e74d91167c2a3ed223bd61f219\",\"dweb:/ipfs/QmQVNSfVHP9zgTNBE2UsnLTCCzfedVL56rGaJaZnGkof2Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "GnosisSafeProxy.sol:GnosisSafeProxy",
								"label": "singleton",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "masterCopy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Richard Meissner - <richard@gnosis.io>",
						"kind": "dev",
						"methods": {},
						"title": "IProxy - Helper interface to access masterCopy of the Proxy on-chain",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"masterCopy()": "a619486e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IProxy - Helper interface to access masterCopy of the Proxy on-chain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GnosisSafeProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GnosisSafeProxy.sol\":{\"keccak256\":\"0x0166e91c659fd2c562cd868dad70f790b4c9c2670b79d703642d4fece6a3eccd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6401ffa288a9184342746143f18c600e4fc1f9e74d91167c2a3ed223bd61f219\",\"dweb:/ipfs/QmQVNSfVHP9zgTNBE2UsnLTCCzfedVL56rGaJaZnGkof2Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GnosisSafeProxy.sol": {
				"ast": {
					"absolutePath": "GnosisSafeProxy.sol",
					"exportedSymbols": {
						"GnosisSafeProxy": [
							39
						],
						"IProxy": [
							8
						]
					},
					"id": 40,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "149:133:0",
								"text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
							},
							"fullyImplemented": false,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "IProxy",
							"nameLocation": "292:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a619486e",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "masterCopy",
									"nameLocation": "315:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:0"
									},
									"scope": 8,
									"src": "306:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 40,
							"src": "282:81:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GnosisSafeProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "367:228:0",
								"text": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "GnosisSafeProxy",
							"nameLocation": "604:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "singleton",
									"nameLocation": "901:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "884:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1068:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1087:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1109:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 19,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1101:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1101:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1087:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1113:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
																"typeString": "literal_string \"Invalid singleton address provided\""
															},
															"value": "Invalid singleton address provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
																"typeString": "literal_string \"Invalid singleton address provided\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "1079:71:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "singleton",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1161:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "_singleton",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1173:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1161:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "1161:22:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "919:111:0",
										"text": "@dev Constructor function sets address of singleton contract.\n @param _singleton Singleton address."
									},
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_singleton",
												"nameLocation": "1056:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1048:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:20:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:0:0"
									},
									"scope": 39,
									"src": "1036:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "1323:797:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1400:713:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1415:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "1437:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:8:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1447:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1433:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:57:0"
															},
															"variables": [
																{
																	"name": "_singleton",
																	"nodeType": "YulTypedName",
																	"src": "1419:10:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1695:88:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1721:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "_singleton",
																					"nodeType": "YulIdentifier",
																					"src": "1724:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1714:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1714:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1714:21:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1760:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1763:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "return",
																				"nodeType": "YulIdentifier",
																				"src": "1753:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1753:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1753:15:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1610:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1610:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1627:66:0",
																		"type": "",
																		"value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1607:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:87:0"
															},
															"nodeType": "YulIf",
															"src": "1604:179:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1816:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:34:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1845:71:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1873:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:5:0"
																	},
																	{
																		"name": "_singleton",
																		"nodeType": "YulIdentifier",
																		"src": "1880:10:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1895:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1860:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:56:0"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "1849:7:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1951:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1930:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1930:38:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2000:61:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "2029:14:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2029:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2019:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2019:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2019:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "1988:7:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1985:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:14:0"
															},
															"nodeType": "YulIf",
															"src": "1982:79:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2082:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2085:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:16:0"
																	}
																],
																"functionName": {
																	"name": "return",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:27:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [],
												"id": 36,
												"nodeType": "InlineAssembly",
												"src": "1391:722:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1199:90:0",
										"text": "@dev Fallback function forwards all transactions and returns all received return data."
									},
									"id": 38,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1303:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:0:0"
									},
									"scope": 39,
									"src": "1295:825:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 40,
							"src": "595:1528:0",
							"usedErrors": []
						}
					],
					"src": "114:2009:0"
				},
				"id": 0
			}
		}
	}
}